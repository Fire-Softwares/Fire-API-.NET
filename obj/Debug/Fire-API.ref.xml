<?xml version="1.0"?>
<doc>
<assembly>
<name>
Fire-API.ref
</name>
</assembly>
<members>
<member name="T:Fire_API.ref.My.Resources.Resources">
<summary>
  Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
</summary>
</member>
<member name="P:Fire_API.ref.My.Resources.Resources.ResourceManager">
<summary>
  Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
</summary>
</member>
<member name="P:Fire_API.ref.My.Resources.Resources.Culture">
<summary>
  Remplace la propriété CurrentUICulture du thread actuel pour toutes
  les recherches de ressources à l'aide de cette classe de ressource fortement typée.
</summary>
</member>
<member name="P:Fire_API.ref.My.Resources.Resources.favicon">
<summary>
  Recherche une ressource localisée de type System.Drawing.Bitmap.
</summary>
</member>
<member name="T:Fire_API.ref.Constants">
 <summary>
 Constant utils class.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.BIT_False">
 <summary>
 Bit false, zero, no, low state
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.BIT_No">
 <summary>
 Bit false, zero, no, low state
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.BIT_Low">
 <summary>
 Bit false, zero, no, low state
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.BIT_True">
 <summary>
 Bit true, one, yes, high state
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.BIT_Yes">
 <summary>
 Bit true, one, yes, high state
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.BIT_High">
 <summary>
 Bit true, one, yes, high state
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.API_InformationsFile">
 <summary>
 Link of the JavaScript Object Notation web file with the informations of the latest version of the Fire-API.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.API_Version">
 <summary>
 Current version of your API.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.API_ApplicationName">
 <summary>
 Name of the application.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.API_Folder">
 <summary>
 Folder where API data are saved.
 </summary>
</member>
<member name="T:Fire_API.ref.Constants.FireLocale">
 <summary>
 Integrated locales.
 </summary>
</member>
<member name="T:Fire_API.ref.Constants.FireTranslations">
 <summary>
 Words and sentences to translate.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.RequestFile">
 <summary>
 Where the requests file of the API is located on Fire-Softwares webserver.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.JSON_MUMBLE">
 <summary>
 JavaScript Object Notation file URL of the current status of the asked server.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.JSON_VPS">
 <summary>
 JavaScript Object Notation file URL of the current status of the asked server.
 </summary>
</member>
<member name="T:Fire_API.ref.Constants.FireAuthTheme">
 <summary>
 Integrated themes.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.LightTheme">
 <summary>
 Light theme JavaScript Object Notation <seealso cref="T:System.String"/>.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.DarkTheme">
 <summary>
 Dark theme JavaScript Object Notation <seealso cref="T:System.String"/>.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_Continue">
 <summary>
 (1xx) Messages with a status line or an header followed by a CRLF line.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_SwitchingProtocols">
 <summary>
 (1xx) Messages with a status line or an header followed by a CRLF line.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_OK">
 <summary>
 (2xx) Messages of successful request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_Created">
 <summary>
 (2xx) Messages of successful request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_Accepted">
 <summary>
 (2xx) Messages of successful request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_NonAuthoritativeInformation">
 <summary>
 (2xx) Messages of successful request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_NoContent">
 <summary>
 (2xx) Messages of successful request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_ResetContent">
 <summary>
 (2xx) Messages of successful request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_PartialContent">
 <summary>
 (2xx) Messages of successful request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_MultipleChoices">
 <summary>
 (3xx) Messages with a message who say that we need to do something for finish the request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_MovedPermanently">
 <summary>
 (3xx) Messages with a message who say that we need to do something for finish the request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_MovedTemporarily">
 <summary>
 (3xx) Messages with a message who say that we need to do something for finish the request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_SeeOther">
 <summary>
 (3xx) Messages with a message who say that we need to do something for finish the request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_NotModified">
 <summary>
 (3xx) Messages with a message who say that we need to do something for finish the request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_UseProxy">
 <summary>
 (3xx) Messages with a message who say that we need to do something for finish the request.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_BadRequest">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_Unauthorized">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_PaymentRequired">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_Forbidden">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_NotFound">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_MethodNotAllowed">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_NotAcceptable">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_ProxyAuthenticationRequired">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_RequestTimeOut">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_Conflict">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_Gone">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_LengthRequired">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_PreconditionFailed">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_RequestEntityTooLarge">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_RequestURITooLong">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_UnsupportedMediaType">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_RequestedRangeUnsatifiable">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_ExpectationFailed">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_TooManyRequests">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_TooManyRequests2">
 <summary>
 (4xx) Error message (if you see this kind of message, run away from here).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_InternalServerError">
 <summary>
 (5xx) Server error messages.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_NotImplemented">
 <summary>
 (5xx) Server error messages.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_BadGateway">
 <summary>
 (5xx) Server error messages.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_ServiceUnavailable">
 <summary>
 (5xx) Server error messages.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_GatewayTimeOut">
 <summary>
 (5xx) Server error messages.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_HTTPVersionNotSupported">
 <summary>
 (5xx) Server error messages.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.HTTP_1000Error">
 <summary>
 (10xx) Error 1000 message.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Champernowne">
 <summary>
 Champernowne's constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.C10">
 <summary>
 Champernowne's constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Champernowne100000">
 <summary>
 Champernowne's constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.GoldNumber">
 <summary>
 Gold number constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.GodNumber">
 <summary>
 Gold number constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.GoldSection">
 <summary>
 Gold number constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Pi">
 <summary>
 π constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Pi100000">
 <summary>
 π constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.E">
 <summary>
 Euler constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Euler">
 <summary>
 Euler constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Euler10000">
 <summary>
 Euler constant.
 </summary>
</member>
<member name="M:Fire_API.ref.Constants.Initialize(Fire_API.ref.Constants.PiDB,System.Boolean)">
 <summary>
 Initialize one of the π databases of the class before getting its numbers.
 </summary>
 <param name="Database">Database to get numbers to</param>
 <param name="NetworkCheck">Check if an network connection is available else returns an <seealso cref="T:System.Exception"/> with message "Can't connect to the network."</param>
</member>
<member name="M:Fire_API.ref.Constants.Initialize(Fire_API.ref.Constants.EulerDB,System.Boolean)">
 <summary>
 Initialize one of the Euler databases of the class before getting its numbers.
 </summary>
 <param name="Database">Database to get numbers to</param>
 <param name="NetworkCheck">Check if an network connection is available else returns an <seealso cref="T:System.Exception"/> with message "Can't connect to the network."</param>
</member>
<member name="M:Fire_API.ref.Constants.InitializeAll(System.Boolean)">
 <summary>
 Initialize the class before getting numbers from database.
 </summary>
 <param name="NetworkCheck">Check if an network connection is available else returns an <seealso cref="T:System.Exception"/> with message "Can't connect to the network."</param>
</member>
<member name="T:Fire_API.ref.Constants.EulerDB">
 <summary>
 EulerDB object.
 <para>- MacTutorHistory (http://www-history.mcs.st-and.ac.uk/HistTopics/e_10000.html), max = 9999 digits, protocol = HTTP</para>
 <para>- NASA (https://apod.nasa.gov/htmltest/gifcity/e.5mil), max = 5000157 digits, protocol = HTTPS</para>
 <para>- Utah (https://www.math.utah.edu/~pa/math/e.html), max = 9999 digits, protocol = HTTPS</para>
 </summary>
</member>
<member name="T:Fire_API.ref.Constants.PiDB">
 <summary>
 PiDB object.
 <para>- CableNewsNetwork (https://edition.cnn.com/2017/03/13/health/pi-digits-trnd/index.html), max = 10000 digits, protocol = HTTPS</para>
 <para>- MIT (https://stuff.mit.edu/afs/sipb/contrib/pi/pi-billion.txt), max = 1000000000 digits, protocol = HTTPS</para>
 <para>- Utah (https://www.math.utah.edu/~pa/math/pi.html), max = 9999 digits, protocol = HTTPS</para>
 </summary>
</member>
<member name="M:Fire_API.ref.Constants.CalculateChampernowneString(System.UInt64)">
 <summary>
 Calculate Champernowne String with specified digits.
 </summary>
 <param name="Digits">Number of digits to compute.</param>
</member>
<member name="M:Fire_API.ref.Constants.GetChampernowneString(System.Int64)">
 <summary>
 Get Champernowne String with specified digits.
 </summary>
 <param name="Digits">Number of digits (max = 100000).</param>
</member>
<member name="M:Fire_API.ref.Constants.GetPi">
 <summary>
 Calculate π.
 </summary>
</member>
<member name="M:Fire_API.ref.Constants.GetPiString(System.Int64)">
 <summary>
 Get π String with specified digits.
 WARNING : You need to do <code>Constants.Initialize()</code> before using this.
 </summary>
 <param name="Digits">Number of digits (max = 99999).</param>
</member>
<member name="M:Fire_API.ref.Constants.CalculateEuler(System.UInt64)">
 <summary>
 Calculate Euler.
 </summary>
 <param name="Iterations">Number of iterations (due to a Visual Basic language limitation, the maximum number of iterations is 18 iterations).</param>
</member>
<member name="M:Fire_API.ref.Constants.GetEulerString(System.Int64)">
 <summary>
 Get Euler String with specified digits.
 </summary>
 <param name="Digits">Number of digits (max = 9999).</param>
</member>
<member name="M:Fire_API.ref.Constants.GetEulerFromDatabase(System.Int64,Fire_API.ref.Constants.EulerDB)">
 <summary>
 Get Euler String from a database specified.
 WARNING : You need to do <seealso cref="T:Fire_API.ref.Constants"/>.Initialize() before using this.
 </summary>
</member>
<member name="M:Fire_API.ref.Constants.GetPiFromDatabase(System.Int64,Fire_API.ref.Constants.PiDB)">
 <summary>
 Get π String from a database specified.
 WARNING : You need to do <seealso cref="T:Fire_API.ref.Constants"/>.Initialize() before using this.
 </summary>
</member>
<member name="M:Fire_API.ref.Constants.ParseUrl(System.String,System.Int64,System.UInt32)">
 <summary>
 Internal method for parsing URLs for getting constants.
 </summary>
 <param name="Database"><seealso cref="T:Fire_API.ref.Constants.EulerDB"/> or <seealso cref="T:Fire_API.ref.Constants.PiDB"/> <seealso cref="T:System.String"/> variable to initialize</param>
 <param name="Digits">Length of the decimals of the number.</param>
 <param name="Index">Index for the substring of the result.</param>
</member>
<member name="M:Fire_API.ref.Constants.SecondDegreePolynomialParabolaVertexGetX(System.Decimal,System.Decimal)">
 <summary>
 Get the X coordinate of the vertex of a second degree polynomial graphical parabola representation (-b divided by 2a with a ≠ 0).
 </summary>
 <param name="a">x² coefficient of the second degree polynomial</param>
 <param name="b">x coefficient of the second degree polynomial</param>
</member>
<member name="M:Fire_API.ref.Constants.HomographicForbiddenValue(System.Decimal,System.Decimal)">
 <summary>
 Get the forbidden value of an homographic function (-d divided by c with c ≠ 0).
 This value will define the set of definitions of the homographic function on ℝ \ {<seealso cref="M:Fire_API.ref.Constants.HomographicForbiddenValue(System.Decimal,System.Decimal)"/>}.
 </summary>
 <param name="c"></param>
 <param name="d"></param>
</member>
<member name="F:Fire_API.ref.Constants.Avogadro">
 <summary>
 Avogadro's constant (unit/mol).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Boltzmann">
 <summary>
 Boltzmann constant (J/K).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.kB">
 <summary>
 Boltzmann constant (J/K).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.C">
 <summary>
 Light speed constant (m/s).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.LightSpeed">
 <summary>
 Light speed constant (m/s).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.EarthGravitationalForce">
 <summary>
 Gravitational force on Earth.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.ElementaryCharge">
 <summary>
 Elementary charge constant.
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Faraday">
 <summary>
 Faraday's constant (C/mol).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.G">
 <summary>
 Gravitational constant (N × m² × kg-²).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.GravitationalConstant">
 <summary>
 Gravitational constant (N × m² × kg-²).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.PerfectGasses">
 <summary>
 Perfect gasses constant (J/(K/mol)).
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.Planck">
 <summary>
 Planck's constant (J × s)
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.ElectronMass">
 <summary>
 Mass of an electron (kg)
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.NeutronMass">
 <summary>
 Mass of a neutron (kg)
 </summary>
</member>
<member name="F:Fire_API.ref.Constants.ProtonMass">
 <summary>
 Mass of a proton (kg)
 </summary>
</member>
<member name="T:Fire_API.ref.EncryptionException">
 <summary>
 Represents an error to throw when the encryption algorithm is not supported in a class.
 </summary>
</member>
<member name="T:Fire_API.ref.Fire_API_ref">
 <summary>
 Definitively best class ever.
 </summary>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.DestroyTempJSON">
 <summary>
 Destroy temp JSON locally created status file.
 </summary>
</member>
<member name="T:Fire_API.ref.Fire_API_ref.ServerInfoType">
 <summary>
 Type of server info required.
 </summary>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.GetServerInformation(Fire_API.ref.Fire_API_ref.ServerInfoType)">
 <summary>
 Return a specified information of the server.
 </summary>
 <param name="InfoType">Type of information needed.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.Initialize(Fire_API.ref.Fire_API_ref.ServerInfoType,System.Boolean)">
 <summary>
 Initialize one JSON status file.
 </summary>
 <param name="InfoType"><seealso cref="T:Fire_API.ref.Fire_API_ref.ServerInfoType"/> to get file for.</param>
 <param name="NetworkCheck">Check if an network connection is available else returns an <seealso cref="T:System.Exception"/> with message "Can't connect to the network."</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.InitializationWorker(Fire_API.ref.Fire_API_ref.ServerInfoType)">
 <summary>
 Initialization worker.
 </summary>
 <param name="InfoType"><seealso cref="T:Fire_API.ref.Fire_API_ref.ServerInfoType"/> to get file for.</param>
</member>
<member name="T:Fire_API.ref.Fire_API_ref.EncryptionAlgorithm">
 <summary>
 The algorithm of encryption used.
 </summary>
</member>
<member name="T:Fire_API.ref.Fire_API_ref.EncryptionType">
 <summary>
 <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionType"/> may be :
 <para>- <see cref="F:Fire_API.ref.Fire_API_ref.EncryptionType.FileContent"/> (only the content of the file)</para>
 <para>- <see cref="F:Fire_API.ref.Fire_API_ref.EncryptionType.FileName"/> (only the name of the file)</para>
 <para>- <see cref="F:Fire_API.ref.Fire_API_ref.EncryptionType.Both"/> (FileName + FileContent)</para>
 </summary>
</member>
<member name="T:Fire_API.ref.Fire_API_ref.WriteMethod">
 <summary>
 <see cref="T:Fire_API.ref.Fire_API_ref.WriteMethod"/> may be :
 <para>- <see cref="F:Fire_API.ref.Fire_API_ref.WriteMethod.Overwrite"/> (will overwrite the file or value if already exists)</para>
 <para>- <see cref="F:Fire_API.ref.Fire_API_ref.WriteMethod.NoOverwrite"/> (will NOT overwrite the file or value and will throw an IOException if the file or value exists)</para>
 </summary>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.GenerateTemp(Fire_API.ref.TempObject,Fire_API.ref.Fire_API_ref.WriteMethod)">
 <summary>
 Generate/regenerate the temp folder/file by giving the <see cref="T:Fire_API.ref.TempObject"/> and optionally the <see cref="T:Fire_API.ref.Fire_API_ref.WriteMethod"/>.
 </summary>
 <param name="TempObj">The TempObject to generate.</param>
 <param name="method">The method to use if the file/folder already exists.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.GenerateAllTemp(System.Collections.Generic.List{Fire_API.ref.TempObject},Fire_API.ref.Fire_API_ref.WriteMethod)">
 <summary>
 Generate/regenerate the temp folder/file by giving the <see cref="T:System.Collections.Generic.List`1"/> and optionally the <see cref="T:Fire_API.ref.Fire_API_ref.WriteMethod"/>.
 </summary>
 <param name="TempList">The List(Of TempObject) to generate.</param>
 <param name="method">The method to use if the file/folder already exists.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.RemoveTemp(Fire_API.ref.TempObject)">
 <summary>
 Remove a temp folder/file by giving the <see cref="T:Fire_API.ref.TempObject"/>.
 </summary>
 <param name="TempObj">The TempObject to remove.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.RemoveTemps(System.Collections.Generic.List{Fire_API.ref.TempObject})">
 <summary>
 Remove multiple temp folders/files at once.
 </summary>
 <param name="TempList">The <see cref="T:System.Collections.Generic.List`1"/> with all <see cref="T:Fire_API.ref.TempObject"/>s stored in to remove.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.EditTempFile(Fire_API.ref.TempObject,System.String,System.Boolean,System.Text.Encoding)">
 <summary>
 Edit a temp file by giving the <see cref="T:Fire_API.ref.TempObject"/>, the <see cref="T:System.String"/> who the content is stored in, the append <see cref="T:System.Boolean"/> and the <see cref="T:System.Text.Encoding"/> for the file.
 </summary>
 <param name="TempObj">The <see cref="T:Fire_API.ref.TempObject"/> to edit.</param>
 <param name="content">The content to add or store into file.</param>
 <param name="append">True if you want to add lines, False if you want to replace all the content with <code>content</code> variable.</param>
 <param name="encoding">The <see cref="T:System.Text.Encoding"/> to use to edit the file.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.GetTempFileContent(Fire_API.ref.TempObject,System.Text.Encoding)">
 <summary>
 Get the content of a temp file.
 </summary>
 <param name="TempObj">The <see cref="T:Fire_API.ref.TempObject"/> to get file content.</param>
 <param name="encoding">The <see cref="T:System.Text.Encoding"/> to use to get the file content.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.RenameTemp(Fire_API.ref.TempObject,System.String,Fire_API.ref.Fire_API_ref.WriteMethod)">
 <summary>
 Rename a temp file/folder.
 </summary>
 <param name="TempObj">The <see cref="T:Fire_API.ref.TempObject"/> to rename.</param>
 <param name="newName">The new name of the file/folder.</param>
 <param name="method">Optionally, the <see cref="T:Fire_API.ref.Fire_API_ref.WriteMethod"/> to use for rename.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.EncryptFile(Fire_API.ref.TempObject,Fire_API.ref.Fire_API_ref.EncryptionAlgorithm,Fire_API.ref.Fire_API_ref.EncryptionType,System.Text.Encoding,System.String,Fire_API.ref.Fire_API_ref.WriteMethod)">
 <summary>
 Encrypt a temp file.
 <para>
 WARNING : The encryption works with TripleDES (see <see cref="T:Fire_API.ref.Simple3Des"/> class) combined with the <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionAlgorithm"/> that you choose.
 When encrypt a file name with this method, the "/" characters of the hash will be automatically replaced with "," because Windows doesn't accept file names with "/".
 </para>
 </summary>
 <param name="TempObj">The <see cref="T:Fire_API.ref.TempObject"/> to encrypt (need to be a file).</param>
 <param name="enc">The <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionAlgorithm"/> to use.</param>
 <param name="enctype">The <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionType"/> to use.</param>
 <param name="baseEncoding">The <see cref="T:System.Text.Encoding"/> of base to use.</param>
 <param name="WriteMethod">The <see cref="T:Fire_API.ref.Fire_API_ref.WriteMethod"/> to use.</param>
 <param name="password">The password to use (you need to remember it, or you can't decrypt your files).</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.EncryptFiles(System.Collections.Generic.List{Fire_API.ref.TempObject},Fire_API.ref.Fire_API_ref.EncryptionAlgorithm,Fire_API.ref.Fire_API_ref.EncryptionType,System.Text.Encoding,System.String,Fire_API.ref.Fire_API_ref.WriteMethod)">
 <summary>
 Encrypt temp files.
 <para>
 WARNING : The encryption works with TripleDES (see <see cref="T:Fire_API.ref.Simple3Des"/> class) combined with the <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionAlgorithm"/> that you choose.
 When encrypt a file name with this method, the "/" characters of the hash will be automatically replaced with "," because Windows doesn't accept file names with "/".
 </para>
 </summary>
 <param name="TempList">The <see cref="T:System.Collections.Generic.List`1"/> to encrypt (only files will be encrypted).</param>
 <param name="enc">The <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionAlgorithm"/> to use.</param>
 <param name="enctype">The <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionType"/> to use.</param>
 <param name="baseEncoding">The <see cref="T:System.Text.Encoding"/> of base to use.</param>
 <param name="WriteMethod">The <see cref="T:Fire_API.ref.Fire_API_ref.WriteMethod"/> to use.</param>
 <param name="password">The password to use (you need to remember it, or you can't decrypt your files).</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.DecryptFile(Fire_API.ref.TempObject,Fire_API.ref.Fire_API_ref.EncryptionAlgorithm,Fire_API.ref.Fire_API_ref.EncryptionType,System.Text.Encoding,System.String,Fire_API.ref.Fire_API_ref.WriteMethod)">
 <summary>
 Decrypt a temp file.
 </summary>
 <param name="TempObj">The <see cref="T:Fire_API.ref.TempObject"/> to decrypt (need to be a file).</param>
 <param name="enc">The <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionAlgorithm"/> to use.</param>
 <param name="dectype">The <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionType"/> to use.</param>
 <param name="baseEncoding">The <see cref="T:System.Text.Encoding"/> of base to use.</param>
 <param name="WriteMethod">The <see cref="T:Fire_API.ref.Fire_API_ref.WriteMethod"/> to use.</param>
 <param name="password">The password used to encrypt the file.</param>
</member>
<member name="M:Fire_API.ref.Fire_API_ref.DecryptFiles(System.Collections.Generic.List{Fire_API.ref.TempObject},Fire_API.ref.Fire_API_ref.EncryptionAlgorithm,Fire_API.ref.Fire_API_ref.EncryptionType,System.Text.Encoding,System.String,Fire_API.ref.Fire_API_ref.WriteMethod)">
 <summary>
 Decrypt temp files.
 </summary>
 <param name="TempList">The <see cref="T:System.Collections.Generic.List`1"/> to decrypt (only files will be decrypted).</param>
 <param name="enc">The <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionAlgorithm"/> to use.</param>
 <param name="dectype">The <see cref="T:Fire_API.ref.Fire_API_ref.EncryptionType"/> to use.</param>
 <param name="baseEncoding">The <see cref="T:System.Text.Encoding"/> of base to use.</param>
 <param name="WriteMethod">The <see cref="T:Fire_API.ref.Fire_API_ref.WriteMethod"/> to use.</param>
 <param name="password">The password used to encrypt the files.</param>
</member>
<member name="T:Fire_API.ref.FireRichTextBoxPrintable">
 <summary>
 Printable RichTextBox control.
 </summary>
</member>
<member name="M:Fire_API.ref.FireRichTextBoxPrintable.Print(System.Int32,System.Int32,System.Drawing.Printing.PrintPageEventArgs)">
 <summary>
 Function for print FireRichTextBoxPrintCtrl content.
 </summary>
 <param name="charFrom">The first character to print position.</param>
 <param name="charTo">The last character to print position.</param>
 <param name="e">The <see cref="T:System.Drawing.Printing.PrintPageEventArgs"/> event.</param>
</member>
<member name="T:Fire_API.ref.Simple3Des">
 <summary>
 Advanced custom integrated Simple TripleDES class.
 </summary>
</member>
<member name="M:Fire_API.ref.Simple3Des.TruncateHash(System.String,System.Int32,Fire_API.ref.Fire_API_ref.EncryptionAlgorithm)">
 <summary>
 Function to truncate hash with the key/password, the length and the selected encryption algorithm.
 </summary>
 <param name="key">Key/password to encrypt the text.</param>
 <param name="length">Chain length.</param>
 <param name="enc">Encryption algorithm to encrypt the text.</param>
</member>
<member name="M:Fire_API.ref.Simple3Des.EncryptData(System.String)">
 <summary>
 Function to encrypt data.
 </summary>
 <param name="plaintext">Text to encrypt.</param>
</member>
<member name="M:Fire_API.ref.Simple3Des.DecryptData(System.String)">
 <summary>
 Function to decrypt data.
 </summary>
 <param name="encryptedtext">Hash to decrypt.</param>
</member>
<member name="T:Fire_API.ref.TempObject">
 <summary>
 This object is for define properties for a temp file/folder.
 </summary>
</member>
<member name="T:Fire_API.ref.TempObject.TempTypes">
 <summary>
 TempTypes may be :
 <para>- Folder</para>
 <para>- File</para>
 </summary>
</member>
</members>
</doc>
